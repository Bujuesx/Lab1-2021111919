classDiagram
    class LoginBoundary {
        +login(user: User) : void
    }

    class ViewTeacherInfoBoundary {
        +viewTeachers() : List[Teacher]
    }

    class AddTeacherInfoBoundary {
        +addTeacher(teacher: Teacher) : void
    }

    class DeleteTeacherInfoBoundary {
        +deleteTeacherById(teacherId: int) : void
    }

    class ViewStudentAppointmentBoundary {
        +viewAppointments() : List[Appointment]
    }

    class AddAvailabilitySlotBoundary {
        +addSlot(slot: AvailabilitySlot) : void
    }

    class TeacherStatusUpdateBoundary {
        +updateStatus(status: String) : void
    }

    class TeacherAvailabilityViewBoundary {
        +viewAvailability() : List[AvailabilitySlot]
    }

    class StudentAvailabilityViewBoundary {
        +viewAvailability() : List[AvailabilitySlot]
    }

    class AddTeacherController {
        +handleAddTeacher() : void
    }

    class DeleteTeacherController {
        +handleDeleteTeacher() : void
    }

    class AddAvailabilityController {
        +handleAddAvailability() : void
    }

    class UpdateAvailabilityStatusController {
        +handleUpdateAvailabilityStatus() : void
    }

    class UpdateAppointmentStatusController {
        +handleUpdateAppointmentStatus() : void
    }

    class FindAvailabilityController {
        +handleFindAvailability() : void
    }

    class AppointmentController {
        +handleAppointment() : void
    }

    class Teacher {
        -teacherId: int
        -name: String
        -subject: String
        -email: String
        -phoneNumber: String
        -address: String
        -loginPassword: String
        -availabilitySlots: List[AvailabilitySlot]
    }

    class Student {
        -studentId: int
        -name: String
        -email: String
    }

    class Appointment {
        -appointmentId: int
        -student: Student
        -teacher: Teacher
        -appointmentTime: DateTime
        -status: String
    }

    class Comment {
        -commentId: int
        -student: Student
        -teacher: Teacher
        -content: String
        -rating: int
    }

    class AvailabilitySlot {
        -slotId: int
        -teacher: Teacher
        -startTime: DateTime
        -endTime: DateTime
        -status: String
    }

    class Admin {
        -adminId: int
        -username: String
        -password: String
    }

    %% Relationships
    LoginBoundary --|> AddTeacherInfoBoundary : extends
    LoginBoundary --|> ViewTeacherInfoBoundary : extends
    LoginBoundary --|> DeleteTeacherInfoBoundary : extends
    LoginBoundary --|> ViewStudentAppointmentBoundary : extends
    LoginBoundary --|> AddAvailabilitySlotBoundary : extends
    LoginBoundary --|> TeacherStatusUpdateBoundary : extends
    LoginBoundary --|> TeacherAvailabilityViewBoundary : extends
    LoginBoundary --|> StudentAvailabilityViewBoundary : extends

    AddTeacherInfoBoundary --|> AddTeacherController : uses
    DeleteTeacherInfoBoundary --|> DeleteTeacherController : uses
    AddAvailabilitySlotBoundary --|> AddAvailabilityController : uses
    TeacherStatusUpdateBoundary --|> UpdateAvailabilityStatusController : uses
    ViewStudentAppointmentBoundary --|> UpdateAppointmentStatusController : uses
    TeacherAvailabilityViewBoundary --|> FindAvailabilityController : uses
    StudentAvailabilityViewBoundary --|> FindAvailabilityController : uses
    AppointmentController --|> AddAvailabilityController : uses

    %% Compositions
    Teacher "1" o-- "1..*" AvailabilitySlot : hasSlots
    Student "1" o-- "0..*" Appointment : hasAppointments
    Appointment "1" o-- "1" Teacher : withTeacher
    Appointment "1" o-- "1" Student : byStudent
